---
### Generate or update a Nginx playbook
## builder_guy
# > ansible-playbook -i hostsWithCustomSSHPort 10-forge-a-nginx.yml

# üí°How to use: Set variables in a dedicated file, and run this playbook to generate nginx playbooks dedicated to one site
#   Run the newly created playbook "start" to generate, upload & deploy the .yml stack file.

# üìåYou can test this playbook by running it without modifications
# > ansible-playbook -i hostsWithCustomSSHPort 10-forge-a-nginx.yml
# It will generate the example in
#     'ansible/generated/tests/masamune/hello--masamune--fr/'
#   sourced by the example var files
#     'roles/stack-web-nginx--generate-playbooks/vars/tests/masamune/hello--masamune--fr/hello--masamune--fr---vars.yml'

# üßæStep-by-step How to:
# 0. Change DNS according to the URI of the website
# 1. Duplicate 'ansible/roles/stack-web-nginx--generate-playbooks/vars/template.yml' to a proper location
#                                             Add '_secret' suffix to add this sensible file to .gitignore vv
#    like 'ansible/roles/stack-web-nginx--generate-playbooks/vars/TYPE/CLIENT/DASHED-URI/DASHED-URI---vars_secret.yml' (which will be üîß vars_file_path)
# 1.1. Edit your file according to your needs
#      Adjust project.vars_file_path  to reflect the path from step 1. See the üîß around line ~25
# 2. Edit this file '10-forge-a-nginx.yml' to use your vars file,see the ‚úèÔ∏è around line ~44
# 3. Run/Test your playbook: ~> ansible-playbook -i hostsWithCustomSSHPort 10-forge-a-nginx.yml
#    You can check the generated playbook file at the root/ or in the /generated folder
# 4. Make backup to a private github repository if everything runs smoothly, and save your file with the variables, and the generated/ folder

# You'll need the_builder_guy to have it's ssh key added to the local agent, cf. the_builder_guy generated documentation

## builder_guy
- name: Generate or update a Nginx project playbooks
  become: yes
  hosts: likorneWithCustomSSHPort
  # builder_guy / cf. /ansible/roles/users/vars/main.yml
  remote_user: '{{ users.0.name }}'
  vars:
    currentDateTime: "{{ ansible_date_time.date }}--{{ ansible_date_time.hour }}h{{ ansible_date_time.minute }}m{{ ansible_date_time.second }}s"
    # Create a new sftp user
    newUser:
      - mail: '{{ project.client_email }}'
        # Ubuntu user max 32 chars. >> truncated "CLIENT_NAME---DASHED_DOMAIN"
        name: '{{ [project.client_name, project.dashed_domain]|join("---") | truncate(32, True, "") }}'
        preventHomeAccess: no
        restrictUser: no
        ssh_passphrase: '{{ sftp.passphrase }}'
  vars_files:
  - defaults/main.yml
  - roles/users/defaults/main.yml
  - vars/main.yml
  - roles/users/vars/main.yml
  # ‚úèÔ∏èEdit project vars files here...
  # - roles/stack-web-nginx--generate-playbooks/vars/TYPE/CLIENT/DASHED-URI/DASHED-URI---vars_secret.yml
  - roles/stack-web-nginx--generate-playbooks/vars/tests/masamune/hello--masamune--fr/hello--masamune--fr---vars.yml

  roles:
    - stack-web-nginx--generate-playbooks
    - stack-web-common--generate
    - sftp-create-user
...