---
### Restore a previously backuped volume: Extract an (host) archive into a volume
## docker_guy
# > ansible-playbook -i hostsWithCustomSSHPort 92-backup-restore-volume-from-host-archive.yml

# ðŸš¨ Note ðŸš¨ : This will replace existing files but **not erase new files**.
#        Best practice would be to create a new volume, populate it with the backup and remap the container accordingly.
#        This also allow the previous volume (..and datas) to persist.

# ðŸ”§ Variables must be properly filled:
# - archiveLocation : The path to the folder containing the archive to restore from (.tar file), located on host, without last slash
# - archiveName     : The archive filename to restore from (.tar file), located on host. Includes extension
# - folderToRestore : The folder where the files are going to be restored INSIDE the volume
# - volumeName      : Identifier of the named volume to restore to a previous state

# For more details, have a look at docker-commands-template.md###Create a backup

# ðŸ“Œ How to test manually:
# 1. Prepare a backup with a variation
#   1.1 Create a backup (through ansible/90-backup-volume-on-host.yml)
#   1.2 Extract it `tar -xvf test---hello--masamune--fr---nginx--logs---backup---latest.tar --strip 1`
#   1.3 Edit the content `cd /FOLDER && touch hey.txt`
#   1.4 Archive it `tar -cvf updated-archive.tar "/FOLDER"`
# 2. Execute this playbook, with adjusted variables (~archiveName & archiveLocation)
# 3. Run a temporary interactive container, with mounted volume to inspect
#       docker run --rm -i -t  \
#         --mount source=test---hello--masamune--fr---nginx--logs,destination=/home/whatever \
#         -w /home/whatever \
#         alpine:latest \
#         /bin/ash
# 4. `ls` & constat that the new file is here :)

# You'll need the_docker_guy to have it's ssh key added to the local agent, cf. the_docker_guy generated documentation

- name: 'Restore a backup archive into a specific volume'
  become: no
  hosts: likorneWithCustomSSHPort
  # docker_guy / cf. /ansible/roles/users/vars/main.yml
  remote_user: '{{ users.2.name }}'
  vars:
    ## ðŸ”§ Edit variables here
    # cf. generated .yml file > volumes > target
    # archiveLocation : '/home/{{ users.2.name }}/backups/volumes/{{ currentYear }}/{{ type || "manual-backup" }}/{{ client }}/{{ volumeName }}'
    # archiveLocation : '/home/the-docker-guy/backups/volumes/2021/manual-backups/masamune/hello--masamune--fr/test---hello--masamune--fr---nginx--logs'
    # archiveLocation : '/home/the-docker-guy/backups/volumes/2021/tests/masamune/hello--masamune--fr/test---hello--masamune--fr---nginx--logs'
    archiveLocation: '/home/{{ users.2.name }}/backups/volumes/2021/manual-backups/masamune/hello--masamune--fr/test---hello--masamune--fr---nginx--logs'
    
    # archiveName     : '{{ volumeName }}---backup---latest.tar'
    archiveName: 'test---hello--masamune--fr---nginx--logs---backup---latest.tar'
    ## ðŸ“ŒTest:
    # archiveName: 'updated-archive.tar'
    
    folderToRestore: '/var/log/'
    volumeName: 'test---hello--masamune--fr---nginx--logs'

  vars_files:
  - defaults/main.yml
  - roles/users/defaults/main.yml
  - vars/main.yml
  - roles/users/vars/main.yml

  roles:
    - docker-volume-restore-from-host-archive
...