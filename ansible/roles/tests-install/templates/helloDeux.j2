version: '3.7'
# cf. https://github.com/youpiwaza/server-related-tutorials/tree/master/01-docker/04-my-tests/09-traefik-curated/11-prod-hello-curated/08-hello-stack-curated-comments

# LATER: Make reusable / adapt vars

# Usage
# docker stack deploy -c helloDeux.yml helloDeux
# docker stack rm helloDeux

# Example for http only.
# Works ONLY on [http uri](http://grafana.masamune.fr/), httpS KO if main domain isn't https + subdomains defined
#   Pay attention as most modern browser will redirect to https by default, inducing false negative

services:
  helloworldDeux:
    # cap_drop:
    #   - ALL
    # # /!\ Only works with docker stack deploy, use bind volume for docker-compose
    configs:
      - source: nginx_config
        target: '/etc/nginx/nginx.conf'
        # user specific
        uid: '1003'
        gid: '1003'
        # read-only
        mode: 0440
    # cpu_shares: 1024
    deploy:
      endpoint_mode: vip
      labels:
        # Tell Traefik to get the contents provided by this service using that shared network.
        - "traefik.docker.network=core-traefik-public"
        # Allow internet exposition (publish on port 80)
        - "traefik.enable=true"
        
        # Specify entrypoint
        - "traefik.http.routers.grafanaMasamuneFr_HelloworldDeux_Router.entrypoints=web"
        # On which url ? Reverse proxy regexp
        - "traefik.http.routers.grafanaMasamuneFr_HelloworldDeux_Router.rule=Host(`grafana.masamune.fr`)"
        # Use the service specifying the internal port
        - "traefik.http.routers.grafanaMasamuneFr_HelloworldDeux_Router.service=grafanaMasamuneFr_HelloworldDeux_Service"
        
        # Create a service specifying the internal port
        - "traefik.http.services.grafanaMasamuneFr_HelloworldDeux_Service.loadbalancer.server.port=8080"
        
        - "fr.masamune.client='masamune'"
        - "fr.masamune.maintainer='masamune.code@gmail.com'"
        - "fr.masamune.project='curated service helloworld deux'"
        - "fr.masamune.type='test'"
      mode: replicated
      replicas: 2
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 5
        window: 120s
      rollback_config:
        delay: 0s
        failure_action: pause
        max_failure_ratio: 0
        monitor: 0s
        order: stop-first
        parallelism: 1
      update_config:
        delay: 10s
        failure_action: pause
        max_failure_ratio: 0
        monitor: 0s
        order: stop-first
        parallelism: 1
    healthcheck:
      test: 'stat /www/index.php || exit 1'
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 0s
    image: tutum/hello-world:latest
    labels:
      fr.masamune.client: 'masamune'
      fr.masamune.maintainer: 'masamune.code@gmail.com'
      fr.masamune.project: 'curated service helloworld'
      fr.masamune.type: 'test'
    # Debug with docker-compose up
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    # --memory-reservation="128m"
    # --memory="256m"
    # --memory-swap -1
    networks:
      # Connect to traefik dedicated overlay network, allow reverse proxy
      - core-traefik-public
    # --pids-limit 200
    # /!\ Specify the internal port, WITHOUT binding it !
    ports:
      - "8080"
    # # Needs write acces for /tmp/ files
    # read_only: true
    security_opt:
      - no-new-privileges=true
      - apparmor=docker-default
      - seccomp=/etc/docker/seccomp-profiles/default-docker-profile.json
    # docker_peon unpriviledged namespaced user
    user: 1003:1003
    # # ulimits > kinda random as I couldn't find any recommandations. Defaults.
    # ulimits:
    #   nofile: 
    #     hard: 4096
    #     soft: 2048
    #   nproc:
    #     hard: 512
    #     soft: 256
    # Mount a prepared volume with existing log files (php-fpm.log, /nginx/access.log, /nginx/error.log) with proper rights (1003:1003), incl. the nginx/ folder
    volumes:
      - type: volume
        read_only: false
        source: test---grafana--masamune--fr---tutum-helloDeux-logs
        target: /var/log/
      # # Note: Use config for docker stack deploy. Bind volumes can be a security issue, and should only be used for debug through docker-compose up
      # # - '/home/{{ users.3.name }}/configs/webserver/nginx/tutum--customUser-p8080-php--nginx.conf:/etc/nginx/nginx.conf:ro'
      # - type: bind
      #   read_only: true
      #   source: /home/{{ users.3.name }}/configs/webserver/nginx/tutum--customUser-p8080-php--nginx.conf
      #   target: /etc/nginx/nginx.conf

configs:
  nginx_config:
    # cf. ansible/roles/configs-install/tasks/nginx.yml
    file: '/home/{{ users.3.name }}/configs/webserver/nginx/tutum--customUser-p8080-php--nginx.conf'

networks:
  core-traefik-public:
    # Connect to an existing network, do not recreate one with a prefix
    external: true

volumes:
  test---grafana--masamune--fr---tutum-helloDeux-logs:
    # Use an existing volume, do not recreate one with a prefix
    external: true