---
##---
## ðŸ¤– This file has been generated automatically through Ansible and **should not be edited by hand**.
## See the [original script](https://github.com/youpiwaza/ansible-install-web-server/blob/master/ansible/roles/stack-web-wordpress--generate-playbooks/tasks/main.yml)
## & [original template file](https://github.com/youpiwaza/ansible-install-web-server/blob/master/ansible/roles/stack-web-wordpress--generate-playbooks/templates/wordpress-playbook-backup-on-host.yml.j2).
## *Generated (yyyy-mm-dd) {{ currentDateTime }}*.
##---

### Restore a previously backuped volume: Extract an (host) archive into a volume
## the_docker_guy
# > ansible-playbook -i hostsWithCustomSSHPort {{ constants.FILE_PREFIX }}{{ project.dashed_domain }}---wordpress-backup-restore-volume-from-host-archive--generated.yml

# This role have been generated through ansible/20-forge-a-wordpress.yml
#   Variables should be properly sourced by your file, created previously:
#   '{{ project.vars_file_path }}'

# ðŸš¨ Note ðŸš¨ : This will replace existing files but **not erase new files**.
#        Best practice would be to create a new volume, populate it with the backup and remap the container accordingly.
#        This also allow the previous volume (..and datas) to persist.

# ðŸ”§ðŸš¨ðŸ’¥ Variables must be properly filled ðŸ’¥FOR BOTHðŸ’¥ database & files volumes:
# - archiveLocationOnHost : The path to the folder containing the archive to restore from (.tar file), located on host, without last slash
# - archiveName           : The archive filename to restore from (.tar file), located on host. Includes extension
# - folderToRestore       : The folder where the files are going to be restored INSIDE the volume
# - volumeName            : Identifier of the named volume to restore to a previous state

# For more details, have a look at docker-commands-template.md###Create a backup

# ðŸ“Œ Manual verification: Run a temporary interactive container, with mounted volume to inspect
# docker run --rm -i -t  \
#   --mount source=VOLUME_NAME,destination=/home/whatever \
#   --userns=host \
#   -w /home/whatever \
#   alpine:latest \
#   /bin/ash
# >> `cd` & `ls` & constat that the new file is here :)

# Based on bitnami's WordPress & MariaDB images
#   https://hub.docker.com/r/bitnami/wordpress/
#   https://hub.docker.com/r/bitnami/mariadb/

# You'll need the_docker_guy to have it's ssh key added to the local agent, cf. the_docker_guy generated documentation

- name: 'Restore a backup archive into a specific volume: WordPress database'
  become: no
  hosts: likorneWithCustomSSHPort
  # the_docker_guy / cf. /ansible/roles/users/vars/main.yml
  remote_user: '{REMOVE-ME-TO-PRESERVE-VARS{ users.2.name }}'
  vars:
    ## ðŸ”§ Edit variables here
    # cf. ansible/roles/stack-web-wordpress--generate-stack/templates/wordpress.yml.j2 > volumes > target
    # archiveLocationOnHost: '/home/{REMOVE-ME-TO-PRESERVE-VARS{ users.2.name }}/backups/volumes/{REMOVE-ME-TO-PRESERVE-VARS{ currentYear }}/{REMOVE-ME-TO-PRESERVE-VARS{ type || "manual-backup" }}s/{REMOVE-ME-TO-PRESERVE-VARS{ client }}/{REMOVE-ME-TO-PRESERVE-VARS{ volumeName }}'
    # archiveLocationOnHost: '/home/{REMOVE-ME-TO-PRESERVE-VARS{ users.2.name }}/backups/volumes/{{ ansible_date_time.year }}/manual-backups/{{ project.client_name }}/{{ project.dashed_domain }}/{{ project.type }}---{{ project.dashed_domain }}---wordpress--database'
    # archiveLocationOnHost: '/home/{REMOVE-ME-TO-PRESERVE-VARS{ users.2.name }}/backups/volumes/{{ ansible_date_time.year }}/{{ project.type }}s/{{ project.client_name }}/{{ project.dashed_domain }}/{{ project.type }}---{{ project.dashed_domain }}---wordpress--database'
    archiveLocationOnHost: '/home/{REMOVE-ME-TO-PRESERVE-VARS{ users.2.name }}/backups/volumes/{{ ansible_date_time.year }}/{{ project.type }}s/{{ project.client_name }}/{{ project.dashed_domain }}/{{ project.type }}---{{ project.dashed_domain }}---wordpress--database'
    
    # archiveName     : '{REMOVE-ME-TO-PRESERVE-VARS{ volumeName }}---backup---latest.tar'
    archiveName: '{{ project.type }}---{{ project.dashed_domain }}---wordpress--database---backup---latest.tar'
    
    folderToRestore: '/bitnami/mariadb/'
    # cf. ansible/roles/stack-web-nginx--deploy/tasks/main.yml
    volumeName: '{{ project.type }}---{{ project.dashed_domain }}---wordpress--database'
  vars_files:
  - defaults/main.yml
  - roles/users/defaults/main.yml
  - roles/users/vars/main.yml
  - vars/main.yml
    # ðŸ”§ project.vars_file_path
  - {{ project.vars_file_path }}

  roles:
    - stack-web-common--stop
    - docker-volume-restore-from-host-archive



- name: 'Restore a backup archive into a specific volume: WordPress files'
  become: no
  hosts: likorneWithCustomSSHPort
  # the_docker_guy / cf. /ansible/roles/users/vars/main.yml
  remote_user: '{REMOVE-ME-TO-PRESERVE-VARS{ users.2.name }}'
  vars:
    ## ðŸ”§ Edit variables here
    # cf. ansible/roles/stack-web-wordpress--generate-stack/templates/wordpress.yml.j2 > volumes > target
    # archiveLocationOnHost: '/home/{REMOVE-ME-TO-PRESERVE-VARS{ users.2.name }}/backups/volumes/{REMOVE-ME-TO-PRESERVE-VARS{ currentYear }}/{REMOVE-ME-TO-PRESERVE-VARS{ type || "manual-backup" }}s/{REMOVE-ME-TO-PRESERVE-VARS{ client }}/{REMOVE-ME-TO-PRESERVE-VARS{ volumeName }}'
    # archiveLocationOnHost: '/home/{REMOVE-ME-TO-PRESERVE-VARS{ users.2.name }}/backups/volumes/{{ ansible_date_time.year }}/manual-backups/{{ project.client_name }}/{{ project.dashed_domain }}/{{ project.type }}---{{ project.dashed_domain }}---wordpress--files'
    # archiveLocationOnHost: '/home/{REMOVE-ME-TO-PRESERVE-VARS{ users.2.name }}/backups/volumes/{{ ansible_date_time.year }}/{{ project.type }}s/{{ project.client_name }}/{{ project.dashed_domain }}/{{ project.type }}---{{ project.dashed_domain }}---wordpress--files'
    archiveLocationOnHost: '/home/{REMOVE-ME-TO-PRESERVE-VARS{ users.2.name }}/backups/volumes/{{ ansible_date_time.year }}/{{ project.type }}s/{{ project.client_name }}/{{ project.dashed_domain }}/{{ project.type }}---{{ project.dashed_domain }}---wordpress--files'
    
    # archiveName     : '{REMOVE-ME-TO-PRESERVE-VARS{ volumeName }}---backup---latest.tar'
    archiveName: '{{ project.type }}---{{ project.dashed_domain }}---wordpress--files---backup---latest.tar'
    
    folderToRestore: '/bitnami/wordpress/'
    # cf. ansible/roles/stack-web-nginx--deploy/tasks/main.yml
    volumeName: '{{ project.type }}---{{ project.dashed_domain }}---wordpress--files'
  vars_files:
  - defaults/main.yml
  - roles/users/defaults/main.yml
  - vars/main.yml
  - roles/users/vars/main.yml
    # ðŸ”§ project.vars_file_path
  - {{ project.vars_file_path }}

  roles:
    - docker-volume-restore-from-host-archive
    - stack-web-wordpress--deploy
...