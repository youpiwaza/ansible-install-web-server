---
### Nginx stack setup: Create volumes & start containers
## the_docker_guy

## This role must be run through a specific playbook.
## cf. ansible/10-forge-a-nginx-stack.yml for use case and example.

## This role is meant to be run AFTER the 'stack-web-nginx--generate' role which will provide .yml stack files.

- debug:
    msg: 'Make sure to have the right public uri for traefik to match to DNS : traefik.public_uri : {{ traefik.public_uri }}'

# Configuration details, debug, etc. here:
#   https://github.com/youpiwaza/server-related-tutorials/tree/master/01-docker/04-my-tests/09-traefik-curated/11-prod-hello-curated/08-hello-stack-curated-comments


### Volumes management
## Logs

# docker volume create \
#    --label fr.masamune.hello.client='masamune' \
#    --label fr.masamune.hello.maintainer='masamune.code@gmail.com' \
#    --label fr.masamune.hello.project='test / nginx / logs' \
#    --label fr.masamune.hello.type='test'
#   test---hello--masamune--fr---nginx---logs

# Use set_fact to create a dictionnary with dynamic keys
#   cf. https://stackoverflow.com/a/44570290/12026487
#   Also NEEDs trailing comma "," to force dictionnary type, else it's considered as a string
- name: Generate Nginx logs labels dictionnary (dynamic keys needs special syntax in ansible)
  set_fact:
    nginx_logs_labels_dict:
      "{
        '{{ project.labels_prefix }}.client': '{{ project.client_name }}'
        ,'{{ project.labels_prefix }}.maintainer': '{{ project.maintainer }}'
        ,'{{ project.labels_prefix }}.project':'{{ project.name }} / logs'
        ,'{{ project.labels_prefix }}.type':'{{ project.type }}'
      }"

# - debug:
#     msg: '{{ nginx_logs_labels_dict }}'

- name: "Create a named volume for Nginx logs '{{ project.type }}---{{ project.dashed_domain }}---nginx--logs'"
  docker_volume:
    labels: '{{ nginx_logs_labels_dict }}'
    name: '{{ project.type }}---{{ project.dashed_domain }}---nginx--logs'

# Go inside the volume through temp alpine container, for rights configuration
#   not using --user, so we're having root access inside the container

# nginx/ folder MUST be 1003:1003 owned too, not only files inside
# docker run \
#    --mount \
#       source=test---hello--masamune--fr---nginx---logs,target=/home \
#    --rm \
#    --workdir /home \
#    alpine \
#    /bin/ash -c '                           \
#     touch php-fpm.log                   && \
#     chown 1003:1003 php-fpm.log         && \
#     mkdir nginx                         && \
#     touch ./nginx/access.log            && \
#     touch ./nginx/error.log             && \
#     chown -R 1003:1003 nginx               '

- name: "Edit '{{ project.type }}---{{ project.dashed_domain }}---nginx--logs' volume content : create files & the_docker_peon chown 1003:1003"
  docker_container:
    auto_remove: yes
    command: "/bin/ash -c 'touch php-fpm.log && chown 1003:1003 php-fpm.log && mkdir nginx && touch ./nginx/access.log && touch ./nginx/error.log && chown -R 1003:1003 nginx'"
    container_default_behavior: compatibility
    image: alpine
    interactive: yes
    mounts:
      - source: '{{ project.type }}---{{ project.dashed_domain }}---nginx--logs'
        target: /home
    name: temp---edit-volume
    working_dir: /home

- debug:
    msg: "If the instance won't start, consider using : server > 'docker service logs -f SERVICE_NAME'"

- name: "Deploy nginx stack '{{ project.type }}---{{ project.dashed_domain }}' from a docker compose .yml file"
  docker_stack:
    name: '{{ project.type }}---{{ project.dashed_domain }}'
    compose:
      # cf. ansible/roles/stack-web-nginx--generate-stack/tasks/generate-yml.yml
      - '/home/{{ users.3.name }}/{{ project.type }}s/{{ project.client_name }}/{{ project.dashed_domain }}/stack/{{ project.dashed_domain }}---nginx--generated.yml'
    state: present
  register: my_stack_status

# - debug:
#     msg: '{{ my_stack_status }}'



- name: Everything went fine :)
  delegate_to: 127.0.0.1
  debug:
    msg:
      - "You should be able to see the website at the designated uri :"
      - ""
      - "https://{{ traefik.public_uri }}/"
...