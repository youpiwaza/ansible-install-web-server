---
### Example of a curated container start to apply all security recommandations
# Used to validate docker security bench
#   See ansible/roles/docker-installation/tasks/docker-bench-security.yml and security related stuff


# Docker security bench results

# [INFO] 5 - Container Runtime
# [PASS] 5.1  - Ensure that, if applicable, an AppArmor Profile is enabled
# [PASS] 5.2  - Ensure that, if applicable, SELinux security options are set
# [PASS] 5.3  - Ensure Linux Kernel Capabilities are restricted within containers
# [PASS] 5.4  - Ensure that privileged containers are not used
# [PASS] 5.5  - Ensure sensitive host system directories are not mounted on containers
# [PASS] 5.6  - Ensure sshd is not run within containers
# [PASS] 5.7  - Ensure privileged ports are not mapped within containers
# [NOTE] 5.8  - Ensure that only needed ports are open on the container
# [PASS] 5.9  - Ensure the host's network namespace is not shared
# [PASS] 5.10  - Ensure that the memory usage for containers is limited
# [PASS] 5.11  - Ensure CPU priority is set appropriately on the container
# [PASS] 5.12  - Ensure that the container's root filesystem is mounted as read only
# [PASS] 5.13  - Ensure that incoming container traffic is bound to a specific host interface
# [PASS] 5.14  - Ensure that the 'on-failure' container restart policy is set to '5'
# [PASS] 5.15  - Ensure the host's process namespace is not shared
# [PASS] 5.16  - Ensure the host's IPC namespace is not shared
# [PASS] 5.17  - Ensure that host devices are not directly exposed to containers
# [PASS] 5.18  - Ensure that the default ulimit is overwritten at runtime if needed
# [PASS] 5.19  - Ensure mount propagation mode is not set to shared
# [PASS] 5.20  - Ensure the host's UTS namespace is not shared
# [PASS] 5.21  - Ensure the default seccomp profile is not Disabled
# [NOTE] 5.22  - Ensure docker exec commands are not used with privileged option
# [NOTE] 5.23  - Ensure that docker exec commands are not used with the user=root option
# [PASS] 5.24  - Ensure that cgroup usage is confirmed
# [PASS] 5.25  - Ensure that the container is restricted from acquiring additional privileges
# [PASS] 5.26  - Ensure that container health is checked at runtime
# [INFO] 5.27  - Ensure that Docker commands always make use of the latest version of their image
# [PASS] 5.28  - Ensure that the PIDs cgroup limit is used
# [PASS] 5.29  - Ensure that Docker's default bridge 'docker0' is not used
# [PASS] 5.30  - Ensure that the host's user namespaces are not shared
# [PASS] 5.31  - Ensure that the Docker socket is not mounted inside any containers



# User hints if there is any problem :/
- debug:
    msg: "\n\nIf this example does not work, please refer to the 'Troubleshooting' section in docker documentation.\n
          https://docs.docker.com/install/linux/linux-postinstall/#troubleshooting\n\n
          Also pay attention to the docker daemon configuration in this project, in /ansible/roles/docker-installation/templates/etc-docker-daemon-json.j2\n\n"

# https://hub.docker.com/_/alpine
- name: Test docker through an alpine container / Pull default alpine image
  docker_image:
    name: '{{ alpineTestImage }}'
    source: pull

- name: Warning about running container
  debug:
    msg: 'Be careful, if this playbook fails, it will not end and the container will still be running !'


# https://docs.ansible.com/ansible/latest/modules/docker_network_module.html
- name: Don't run on docker default bridge network, create a custom one
  docker_network:
    driver: bridge
    labels:
      fr.masamune.client: 'masamune'
      fr.masamune.maintainer: 'masamune.code@gmail.com'
      fr.masamune.project: 'custom bridge network'
      fr.masamune.type: 'test'
    name: test-custom-bridge
    state: present

# https://docs.ansible.com/ansible/latest/modules/docker_container_module.html
- name: Start a curated alpine test container
  docker_container:
    # Remove all capabilities
    cap_drop:
      - all
    # alpine sleep infinity so the container don't stop
    command: "sh -c 'while sleep 3600; do :; done'"
    # Fair share of cpu capabilities # 512 = half # 2048 = double
    cpu_shares: 1024
    # run in background, to let the time to test docker security bench
    detach: yes
    healthcheck:
      test: 'stat /etc/passwd || exit 1'
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 0s
    image: '{{ alpineTestImage }}'
    # https://docs.docker.com/config/labels-custom-metadata/
    labels:
      fr.masamune.client: 'masamune'
      fr.masamune.maintainer: 'masamune.code@gmail.com'
      fr.masamune.project: 'curated alpine'
      fr.masamune.type: 'test'
    # Configure RAM limits, /!\ all strings except memory_swappiness (integer)
    memory: '256m'
    memory_reservation: '128m'
    # By default, swap seems desactivated..
    # memory_swap: '-1' # Only positive integers in ansible
    # memory_swappiness: 0 # Need swap activated
    name: test-curated-alpine
    # Don't run on docker default bridge network, also needs networks_cli_compatible, network_mode and purge_networks
    networks:
      - name: test-custom-bridge
    networks_cli_compatible: yes
    network_mode: bridge
    # Limit processes run by the container
    pids_limit: 200
    # Detach from docker default bridge network
    purge_networks: yes
    # Mount the container's root file system as read-only.
    read_only: yes
    # Ensure that the 'on-failure' container restart policy is set to '5'
    restart_policy: 'on-failure'
    restart_retries: 5
    # Security options / Type: list / elements=string
    security_opts:
      - 'no-new-privileges:true'
      - 'apparmor=docker-default'
      # KO / seccomp value and path to profile.json
      # - 'seccomp=/etc/docker/seccomp-profiles/default-docker-profile.json'
      # - 'seccomp=default-docker-profile'
      # Use default profile
    state: started
    # Assign the_docker_peon unprivileged user
    #   To get the_docker_peon user uid gid > sudo nano /etc/passwd > 1003:1003
    user: '1003:1003'
    # Type: list / elements=string
    # /!\ Pay attention to :ro > Try to always mount as read-only
    volumes:
      - '/home/{{ users.3.name }}/tests-volume:/home:ro'
    working_dir: '/home'


- name: Remove the test container // Comment to run the container and then docker security bench
  docker_container:
    name: test-curated-alpine
    state: absent

- name: Remove docker default bridge network
  docker_network:
    name: test-custom-bridge
    state: absent
...