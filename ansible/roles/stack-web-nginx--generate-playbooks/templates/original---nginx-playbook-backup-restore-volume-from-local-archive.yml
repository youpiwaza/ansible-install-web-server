---
### Restore a previously backuped volume: Upload a local archive to the host, then extract it into a volume
## the_docker_guy
# > ansible-playbook -i hostsWithCustomSSHPort 100---hello--masamune--fr---nginx-backup-restore-volume-from-local-archive--generated.yml

# ðŸš¨ Note ðŸš¨ : This will replace existing files but **not erase new files**.
#        Best practice would be to create a new volume, populate it with the backup and remap the container accordingly.
#        This also allow the previous volume (..and datas) to persist.

# ðŸ”§ðŸš¨ðŸ’¥ Variables must be properly filled:
# - archiveLocationOnHost   : The path to the folder to copy the local archive on host
# - archiveLocationOnLocal  : The path to the folder containing the archive to restore from (.tar file), locally (depending on current directory), without last slash
# - archiveName             : The archive filename to restore from (.tar file), located on host. Includes extension
# - folderToRestore         : The folder where the files are going to be restored INSIDE the volume
# - volumeName              : Identifier of the named volume to restore to a previous state

# For more details, have a look at docker-commands-template.md###Create a backup

# ðŸ“Œ Manual verification: Run a temporary interactive container, with mounted volume to inspect
# docker run --rm -i -t  \
#   --mount source=VOLUME_NAME,destination=/home/whatever \
#   --userns=host \
#   -w /home/whatever \
#   alpine:latest \
#   /bin/ash
# >> `cd` & `ls` & constat that the new file is here :)

# You'll need the_docker_guy to have it's ssh key added to the local agent, cf. the_docker_guy generated documentation

- name: 'Restore a previously backuped volume: Upload a local archive to the host, then extract it into a volume'
  become: no
  hosts: likorneWithCustomSSHPort
  # the_docker_guy / cf. /ansible/roles/users/vars/main.yml
  remote_user: '{{ users.2.name }}'
  vars:
    ## ðŸ”§ Edit variables here
    # cf. generated .yml file > volumes > target

    # archiveLocationOnHost: '/home/{{ users.2.name }}/backups/volumes/{{ currentYear }}/imports/{{ client }}/{{ volumeName }}'
    archiveLocationOnHost: '/home/{{ users.2.name }}/backups/volumes/2021/imports/masamune/hello--masamune--fr/test---hello--masamune--fr---nginx--logs'

    # archiveLocationOnLocal: './generated/backups/volumes/{{ currentYear }}/{{ project.type }}s/{{ project.client_name }}/{{ project.dashed_domain }}/{{ volumeName }}'
    # archiveLocationOnLocal: './generated/backups/volumes/2021/manual-backups/masamune/hello--masamune--fr/test---hello--masamune--fr---nginx--logs'
    # archiveLocationOnLocal: './generated/backups/volumes/2021/tests/masamune/hello--masamune--fr/test---hello--masamune--fr---nginx--logs'
    archiveLocationOnLocal: './generated/backups/volumes/2021/manual-backups/masamune/hello--masamune--fr/test---hello--masamune--fr---nginx--logs'
    
    # archiveName: '{{ volumeName }}---backup---latest.tar'
    archiveName: 'test---hello--masamune--fr---nginx--logs---backup---latest.tar'
    
    folderToRestore: '/var/log/'
    
    # project:
    #   client_name: 'masamune'
    #   dashed_domain: 'manual-backups'
    #   type: 'test'
    
    volumeName: 'test---hello--masamune--fr---nginx--logs'
  vars_files:
  - defaults/main.yml
  - roles/users/defaults/main.yml
  - vars/main.yml
  - roles/users/vars/main.yml

  roles:
    - stack-web-common--stop
    - docker-volume-copy-backup-archive-to-host
    - docker-volume-restore-from-host-archive
    - stack-web-nginx--deploy
...