---
### Backup a specific volume: Extract a specific folder, then archive it on host (.tar)
## docker_guy

# ðŸš¨ðŸ”§ Variables must be properly defined in playbook:
# - folderToBackup  : The folder where the files are stored INSIDE the volume
# - type            : clients/manual-backups/tests
# - volumeName      : identifier of the named volume

# ðŸ¤– Automated:
# - Name of the archive
# - Timestamp
# - Where the archive will be stored, cf. nomenclature-and-folder-tree.md
#     As a manual backup, it will be stored around ~/the-docker-guy/backups/volumes/YEAR/TYPE/...

- name: Create directory '/home/{{ users.2.name }}/backups/volumes/{{ currentYear }}/{{ type }}/{{ volumeName }}/'
  file:
    path: '/home/{{ users.2.name }}/backups/volumes/{{ currentYear }}/{{ type }}/{{ volumeName }}/'
    state: directory
    

## Backup
# cf. docker-commands-template.md###Create a backup

# docker run --rm -i -t  \
#   --mount source=test-helloDeux-logs,destination=/var/log/ \
#   --mount type=bind,source=$(pwd),destination=/backup \
#   --userns=host \
#   -w /home/backup \
#   alpine:latest \
#   tar -cvf /backup/test-helloDeux-logs---backup---$(date +%Y-%m-%d--%Hh%Mm%Ss).tar "/var/log/"

# '/home/{{ users.2.name }}/backups/volumes/{{ currentYear }}/{{ type }}/{{ volumeName }}/{{ volumeName }}---backup---currentDateTime.tar'
- name: "Backup folder '{{ folderToBackup }}' located inside named volume '{{ volumeName }}'"
  docker_container:
    auto_remove: yes
    # tar -cvf /backup/SAVE_NAME.tar "/FOLDER_IN_VOLUME_TO_BACKUP"
    command: 'tar -cvf /backup/{{ volumeName }}---backup---{{ currentDateTime }}.tar "{{ folderToBackup }}"'
    container_default_behavior: compatibility
    image: alpine:latest
    interactive: yes
    mounts:
      # What to backup
      - source: '{{ volumeName }}'
        target: '{{ folderToBackup }}'
        # type: volume
      
        # Where to store backup
      - source: '/home/{{ users.2.name }}/backups/volumes/{{ currentYear }}/{{ type }}/{{ volumeName }}/'
        # temp folder, and isn't relevant, but MUST be different from the folder from the volume to backup
        target: '/backup'
        type: bind
    name: temp---backup-volume
    userns_mode: host
    working_dir: /home/backup

- name: Wait for archive creation
  wait_for:
    path: '/home/{{ users.2.name }}/backups/volumes/{{ currentYear }}/{{ type }}/{{ volumeName }}/{{ volumeName }}---backup---{{ currentDateTime }}.tar'

- name: Duplicate backup to latest, to simplify local gathering
  copy:
    dest: '/home/{{ users.2.name }}/backups/volumes/{{ currentYear }}/{{ type }}/{{ volumeName }}/{{ volumeName }}---backup---latest.tar'
    force: yes
    remote_src: yes
    src: '/home/{{ users.2.name }}/backups/volumes/{{ currentYear }}/{{ type }}/{{ volumeName }}/{{ volumeName }}---backup---{{ currentDateTime }}.tar'

- debug:
    msg:
      - 'Everything went fine, your backup is located on the host here:'
      - ''
      - '/home/{{ users.2.name }}/backups/volumes/{{ currentYear }}/{{ type }}/{{ volumeName }}/{{ volumeName }}---backup---{{ currentDateTime }}.tar'
      - ''
      - ''
      - "Use 'tar -xvf {{ volumeName }}---backup---{{ currentDateTime }}.tar --strip 1' to extract files and folders"
      - ''
      - 'For more details, have a look at docker-commands-template.md###Create a backup'
...