---
### Test docker-compose through nginx + phpfpm

# https://github.com/youpiwaza/server-related-tutorials/tree/master/01-docker/04-my-tests/02-compose-nginx-php

## Clone project on remote host, then start composition
# Re-create folder
- name: Test docker-compose through nginx + phpfpm / Remove test directory
  file:
    path: '/home/{{ users.3.name }}/tests/{{ docker_compose_installation__publicRepo.name }}/'
    state: absent

- name: Create test directory
  file:
    path: '/home/{{ users.3.name }}/tests/{{ docker_compose_installation__publicRepo.name }}/'
    state: directory
    mode: '0755'

# Clone public repo
#   https://docs.ansible.com/ansible/latest/modules/git_module.html
- name: 'Clone project {{ docker_compose_installation__publicRepo.name }} from {{ docker_compose_installation__publicRepo.uri }} in test folder'
  git:
    clone: yes
    dest: '/home/{{ users.3.name }}/tests/{{ docker_compose_installation__publicRepo.name }}/'
    repo: '{{ docker_compose_installation__publicRepo.uri }}'

- name: Warning about running container
  delegate_to: 127.0.0.1
  debug:
    msg: 'Be careful, if this playbook fails, it will not end and 2 containers will still be running !'

## Start composition
- name: Create and start composition
  docker_compose:
    # /!\ BE CAREFUL, if you specify a project name on start, you MUST specify it when stopping the project
    project_name: docker-compose-test
    # Ne fonctionne pas depuis un projet local, doit d'abord être copié sur la machine disatante
    # puis project_src correspond à l'endroit du projet sur la machine distante..
    #   https://github.com/ansible/ansible/issues/64773#issuecomment-553398448
    # project_src: '../tests/02-compose-nginx-php/'
    project_src: '/home/{{ users.3.name }}/tests/{{ docker_compose_installation__publicRepo.name }}/'
    # default state is present
    # state: present
  register: output

# - name: Debug
#   delegate_to: 127.0.0.1
#   debug:
#     var: output

## Check composition
- name: Check that you can connect (GET) to a page and it returns a status 200
  uri:
    url: 'http://{{ ansible_host }}/'

- name: "Check that a page returns a status 200 and fail if the words 'Fuck yeah' is not in the page contents"
  uri:
    url: 'http://{{ ansible_host }}/'
    return_content: yes
  register: da_webpage
  failed_when: "'Fuck yeah' not in da_webpage.content"

- name: Display page content in ansible logs
  delegate_to: 127.0.0.1
  debug:
    msg:
      - 'Affichage du contenu de la page :'
      - '{{ da_webpage.content }}'

# Stop and remove test
- name: Stop and remove composition
  docker_compose:
    # /!\ BE CAREFUL, if you specify a project name on start, you MUST specify it when stopping the project
    project_name: docker-compose-test
    project_src: '/home/{{ users.3.name }}/tests/{{ docker_compose_installation__publicRepo.name }}/'
    state: absent

- name: Remove test directory
  file:
    path: '/home/{{ users.3.name }}/tests/{{ docker_compose_installation__publicRepo.name }}/'
    state: absent
...