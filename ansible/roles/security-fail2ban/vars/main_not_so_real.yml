---
packagesToInstall: [
  # Spam prevention       / http://www.fail2ban.org/
  'fail2ban'
]

# Based on nickjj's defaults
#   https://github.com/nickjj/ansible-fail2ban/blob/master/defaults/main.yml

# Which log level should it be output as ?
# 1 = ERROR, 2 = WARN, 3 = INFO, 4 = DEBUG
fail2ban_loglevel: 3

# Where should log outputs be sent to ?
# SYSLOG, STDERR, STDOUT, file
# fail2ban_logtarget: /var/log/fail2ban.log
# Recommandation / Service hardening
#   https://wiki.archlinux.org/index.php/Fail2ban#Service_hardening
fail2ban_logtarget: /var/log/fail2ban/fail2ban.log

# Where should the socket be created ?
fail2ban_socket: /var/run/fail2ban/fail2ban.sock



# Which IP address, CIDR mark or DNS host should be ignored ?
fail2ban_ignoreip: 127.0.0.1/8

# How long in seconds should the ban last for ? 60s x 10 = 10mn
fail2ban_bantime: 600

# A host is banned if it has generated "maxretry" during the last "findtime" seconds
fail2ban_findtime: 600

# How many times can they try before getting banned?
fail2ban_maxretry: 6



# How should the file changes be detected?
# gamin, polling, auto
fail2ban_backend: polling



# Where should e-mail reports be sent to?
# fail2ban_destemail: root@localhost
fail2ban_destemail: '{{ my_mail }}'

# Name of the sender for mta actions
fail2ban_sendername: Fail2Ban

# Email address of the sender
# fail2ban_sender: localhost@ubuntu
fail2ban_sender: shaco_the_builder_guy_73nss523qy@ns371715.ip-188-165-253.eu



# How should the ban be applied?
# iptables, iptables-new, iptables-multiport, shorewall, etc.
fail2ban_banaction: iptables-multiport

# What e-mail action should be used?
# sendmail or mail
fail2ban_mta: sendmail

# What should the default protocol be?
fail2ban_protocol: tcp

# Which chain would the JUMPs be added into iptables-*?
fail2ban_chain: INPUT

# What should the default ban action be?
# action_, action_mw, action_mwl
fail2ban_action: action_
# fail2ban_action: action_mwl



# What services should fail2ban monitor?
# You can define fail2ban_services as an empty string to not monitor anything.
# You can define multiple services as a standard yaml list.
fail2ban_services:
  # # The name of the service
  # # REQUIRED.
  # - name: ssh

  #   # Is it enabled?
  #   # OPTIONAL: Defaults to "true" (must be a string).
  #   enabled: "true"

  #   # What port does the service use?
  #   # Separate multiple ports with a comma, no spaces.
  #   # REQUIRED.
  #   port: ssh

  #   # What protocol does the service use?
  #   # OPTIONAL: Defaults to the protocol listed above.
  #   protocol: tcp

  #   # What filter should it use?
  #   # REQUIRED.
  #   filter: sshd

  #   # Which log path should it monitor?
  #   # REQUIRED.
  #   logpath: /var/log/auth.log

  #   # How many times can they try before getting banned?
  #   # OPTIONAL: Defaults to the maxretry listed above.
  #   maxretry: 6

  #   # What should the default ban action be?
  #   # OPTIONAL: Defaults to the action listed above.
  #   action: action_

  #   # How should the ban be applied?
  #   # OPTIONAL: Defaults to the banaction listed above.
  #   banaction: iptables-multiport

  # Prevent SSH bruteforce
  - name: ssh
    # port: ssh
    # custom ssh port
    port: '{{ custom_ssh_port }}'
    filter: sshd
    logpath: /var/log/auth.log

  # - name: postfix
  #   port: smtp,ssmtp
  #   filter: postfix
  #   logpath: /var/log/mail.log
...