---
### Restore a previously backuped volume: Extract an (host) archive into a volume
## docker_guy

# cf. playbook : ansible/92-backup-restore-volume-from-host-archive.yml

# ðŸš¨ðŸ”§ Variables must be properly defined in playbook:
# - archiveLocationOnHost : The path to the folder containing the archive to restore from (.tar file), located on host, without last slash
# - archiveName           : The archive filename to restore from (.tar file), located on host. Includes extension
# - folderToRestore       : The folder where the files are going to be restored INSIDE the volume
# - volumeName            : Identifier of the named volume to restore to a previous state

## Backup
# cf. docker-commands-template.md###Create a backup

# ðŸ“Œ How to test manually:
# 1. Prepare a backup with a variation
#   1.1 Create a backup (through ansible/90-backup-volume-on-host.yml)
#   1.2 Extract it `tar -xvf test---hello--masamune--fr---nginx--logs---backup---latest.tar`
#   1.3 Edit the content `cd /FOLDER && touch hey.txt`
#   1.4 Archive it `tar -cvf updated-archive.tar "/FOLDER"`
# 2. Execute this playbook, with adjusted variables (~archiveName & archiveLocationOnHost)
# 3. Run a temporary interactive container, with mounted volume to inspect
#       docker run --rm -i -t  \
#         --mount source=test---hello--masamune--fr---nginx--logs,destination=/home/whatever \
#         -w /home/whatever \
#         alpine:latest \
#         /bin/ash
# 4. `ls` & constat that the new file is here :)

# ---

## Manual command
# docker run --rm -i -t  \
#   --mount source=VOLUME_TO_RESTORE_NAME,destination=/FOLDER_IN_VOLUME_TO_RESTORE \
#   --mount type=bind,source=/HOST_SAVE_ARCHIVE_LOCATION,destination=/home/backup \
#   --userns=host \
#   alpine:latest \
#   tar -xvf SAVE_NAME.tar

# archiveLocationOnHost:  '/home/{{ users.2.name }}/backups/volumes/{{ currentYear }}/{{ type || "manual-backup" }}/{{ client }}/{{ volumeName }}/'
# archiveLocationOnHost:  '/home/the-docker-guy/backups/volumes/2021/manual-backups/masamune/hello--masamune--fr/test---hello--masamune--fr---nginx--logs/'
# archiveLocationOnHost:  '/home/the-docker-guy/backups/volumes/2021/tests/masamune/hello--masamune--fr/test---hello--masamune--fr---nginx--logs/'
# archiveName:      '{{ volumeName }}---backup---latest.tar'
# archiveName:      'test---hello--masamune--fr---nginx--logs---backup---latest.tar'
- name: "Restore archive '{{ archiveLocationOnHost }}/{{ archiveName }}' into named volume '{{ volumeName }}'"
  docker_container:
    auto_remove: yes
    # tar -xvf /home/backup/SAVE_NAME.tar
    # command: 'tar -xvf /home/backup/{{ archiveName }}'
    command: 'tar -xvf /home/backup/{{ archiveName }}'
    container_default_behavior: compatibility
    image: alpine:latest
    interactive: yes
    mounts:
      # Which volume to restore, in which folder
      - source: '{{ volumeName }}'
        target: '{{ folderToRestore }}'
        # type: volume
      
        # What archive to restore from # The path & filename to restore from (.tar file), located on host
      - source: '{{ archiveLocationOnHost }}'
        # temp folder, and isn't relevant, but MUST be different from the folder from the volume to backup
        target: '/home/backup'
        type: bind
    name: temp---backup-volume
    userns_mode: host
...