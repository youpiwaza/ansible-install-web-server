---
# ### Template vars file if you want to override some variables
# ## Global vars

# # If you want to change the default SSH port
# #   Also used for iptables firewall rules
# global__custom_ssh_port: 6969

# # Email used for notifications
# global__admin_email: YOUR_EMAIL

# # Default root user to connect to your server, usually root
# # global__remote_user: YOUR_REMOTE_USER
# global__remote_user: root

# # Ip adresse of your server
# # Must also be set in /ansible/hosts & hostsWithCustomSSHPort
# global__remote_host: 169.169.169.169

# # SSH pass phrase for ssh key authentication (no password)
# # Root will be mostly used only to set up other users
# # https://passwordsgenerator.net/ / lower and UPPERCASE, numbers and special chars
# global__remote_host_ssh_passphrase: whatever

# # Alpine image to test all the docker stuff on
# global__alpineTestImage: 'alpine:3.11.5'

# # Nginx image to test all the docker stuff on
# global__nginxTestImage: 'nginx:1.16.1-alpine'


# ## Core install reverse proxy
# # https://hub.docker.com/r/tecnativa/docker-socket-proxy/
# # No proper tag versionning :/
# # ~01/2020
# # SIZE: 8.05 MB
# # DIGEST: sha256:1d3eb63508d9a56d1086487889493fb6dd10d80220a6a92d26b8934526b31559
# core_install_reverse_proxy__docker_socket_proxy_image: 'tecnativa/docker-socket-proxy:latest'

# # https://hub.docker.com/_/traefik
# # In case of migration break the glass / https://doc.traefik.io/traefik/migration/v2/
# core_install_reverse_proxy__traefik_image: 'traefik:2.4.8'
# core_install_reverse_proxy__traefik_image_label: 'Traefik 2.4.8 / livarot'


# ## Docker compose installation
# # pip packages to install both locally & on remote host
# docker_compose_installation__bothHostsPipPackagesToInstall: [
#   'docker-compose',
#   'PyYAML'
# ]

# docker_compose_installation__publicRepo: 
#   name: docker-compose-example
#   uri: https://github.com/youpiwaza/docker-compose-example.git

# docker_compose_installation__publicRepoCurated: 
#   name: docker-compose-curated-example
#   uri: https://github.com/youpiwaza/docker-compose-curated-example.git


# ## docker_guy check
# docker_guy_check__publicRepoCurated: 
#   name: docker-compose-curated-example
#   uri: https://github.com/youpiwaza/docker-compose-curated-example.git


# ## Docker installation
# docker_installation__bothHostsPipPackagesToInstall: [
#   'docker'
# ]

# docker_installation__dockerBenchSecurityPackagesToInstall: [
#   'auditd'
# ]

# # Some values for /etc/docker/daemon.json
# docker_installation__dockerConfig:
#   # This example sets a soft limit of 128 open files and 32 child processes and a hard limit of 256 open files and 64 child processes on the container.
#   #   https://docs.oracle.com/en/operating-systems/oracle-linux/docker/ch04s16.html
#   default_ulimits:
#     nofile:
#       hard: 4096
#       soft: 2048
#     nproc:
#       hard: 512
#       soft: 256

# # It reduces server performances and isn't mandatory if you uses services
# #   https://docs.docker.com/config/containers/resource_constraints/
# #     https://docs.docker.com/install/linux/linux-postinstall/#your-kernel-does-not-support-cgroup-swap-limit-capabilities
# #   https://docs.docker.com/config/containers/resource_constraints/#understand-the-risks-of-running-out-of-memory
# #   > Consider converting your container to a service, and using service-level constraints
# #   > and node labels to ensure that the application runs only on hosts with enough memory
# # Ansible can manage it
# #   https://docs.ansible.com/ansible/latest/modules/docker_swarm_service_module.html#parameter-reservations
# docker_installation__enableDockerSwapLimitSupport: no

# # https://docs.ansible.com/ansible/latest/modules/pip_module.html > Requirements
# docker_installation__localHostPackagesToInstall: [
#   'python3-pip',
#   'python3-setuptools',
#   'virtualenv'
# ]

# docker_installation__publicRepo: 
#   name: test-min-static-site
#   uri: https://github.com/youpiwaza/test-min-static-site.git

# # https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-engine---community-1
# docker_installation__remoteHostDockerPackagesToInstall: [
#   'docker-ce',
#   'docker-ce-cli',
#   'containerd.io'
# ]

# # https://docs.docker.com/install/linux/docker-ce/ubuntu/#uninstall-old-versions
# docker_installation__remoteHostOldPackagesToUninstall: [
#   'docker',
#   'docker-engine',
#   'docker.io',
#   'containerd',
#   'runc'
# ]

# # https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-using-the-repository
# # https://docs.ansible.com/ansible/latest/modules/pip_module.html > Requirements
# docker_installation__remoteHostPackagesToInstall: [
#   'apt-transport-https',
#   'ca-certificates',
#   'curl',
#   'gnupg-agent',
#   'python3-pip',
#   'python3-setuptools',
#   'software-properties-common',
#   'virtualenv'
# ]


# ## Docker swarm installation
# docker_swarm_installation__bothHostsPipPackagesToInstall: [
#   'jsondiff',
#   'pyyaml'
# ]

# docker_swarm_installation__publicRepo: 
#   name: docker-compose-example
#   uri: https://github.com/youpiwaza/docker-compose-example.git

# docker_swarm_installation__publicRepoCurated: 
#   name: docker-compose-curated-example
#   uri: https://github.com/youpiwaza/docker-compose-curated-example.git


# ## Packages installation
# Feel free to add your desired packages here
# Each tasks installs it's own needed plugins, for better readability, modularity & maintenance
# packages_installation__packagesToInstall: [
#   # CLI for data transfer / https://curl.haxx.se/                 / Required for Oh my ZSH
#   'curl',
#   # Versionning           / https://git-scm.com/                  / Required for Oh my ZSH
#   'git',
#   # Process viewer        / https://hisham.hm/htop/
#   'htop'
# ]


# ## Security AppArmor
# # From /templates, will be used during containers start. Do not enforce
# security_apparmor__appArmorProfilesToAdd:
#   - 'docker-nginx'

# # See files on host in /etc/apparmor.d/
# security_apparmor__appArmorProfilesToEnforce:
#   # Example
#   - 'usr.sbin.chronyd'

# # https://help.ubuntu.com/lts/serverguide/serverguide.pdf#page=200
# security_apparmor__packagesToInstall: [
#   'apparmor',
#   'apparmor-profiles',
#   'apparmor-utils',
#   'auditd'
# ]

# ## Security fail2ban
# security_fail2ban__packagesToInstall: [
#   # Spam prevention       / http://www.fail2ban.org/
#   'fail2ban'
# ]

# # cf. ansible/roles/security-fail2ban/defaults/main.yml
# fail2ban_loglevel: 3
# fail2ban_logtarget: /var/log/fail2ban/fail2ban.log
# fail2ban_socket: /var/run/fail2ban/fail2ban.sock
# fail2ban_ignoreip: 127.0.0.1/8
# fail2ban_bantime: 600
# fail2ban_findtime: 600
# fail2ban_maxretry: 6
# fail2ban_backend: polling
# fail2ban_destemail: '{{ global__admin_email }}'
# fail2ban_sendername: Fail2Ban
# fail2ban_sender: '{{ users.0.name }}@ubuntu'
# fail2ban_banaction: iptables-multiport
# fail2ban_mta: sendmail
# fail2ban_protocol: tcp
# fail2ban_chain: INPUT
# fail2ban_action: action_
# fail2ban_services:
#   # Prevent SSH bruteforce
#   - name: ssh
#     # port: ssh
#     # custom ssh port
#     port: '{{ global__custom_ssh_port }}'
#     filter: sshd
#     logpath: /var/log/auth.log


# ## Security firewall
# security_firewall__packagesToInstall: [
#   # Firewall              / https://doc.ubuntu-fr.org/iptables    / Required for Oh my ZSH
#   'iptables'
# ]

# security_firewall__iptables_restart_dependent_services:
#   - name: 'docker'
#     path: '/etc/systemd/system/'


# ## Users
# users__docker:
#   # Set to yes if you have at least one docker manager
#   # It prevents running docker as root
#   #   https://docs.docker.com/install/linux/linux-postinstall/#manage-docker-as-a-non-root-user
#   # Note that it might be created by docker itself
#   createDockerGroup: yes

# # Create a user, postfixed with a random string
# # https://passwordsgenerator.net/
# # No uppercase, max 32 chars
# users:
#   # Will proceed to the installation after root (packages, utils, host security, docker)
#   # No more chars than this for name     >|
#   - name: the_builder_guy_5kk2dnjtbcxttd7g
#     allowCron: no
#     dockerManagement: no
#     mail: your_email
#     preventHomeAccess: yes
#     restrictUser: no
#     # Passphrase, random 64 chars
#     #   Example:
#     #   ssh_passphrase: 'dR$&!GZE]s[1]c!UfAG3ykp*3qrSr3f$4HLs+u+76Q9faEdNX2jvg4raYVPmX_4AND'
#     ssh_passphrase: 'your_pass_phrase'
#     sudoer: yes

#   # Will be the dedicated user to manage host's planned tasks
#   - name: the_cron_guy_nvhrg559y8hb5qka2d2
#     allowCron: yes
#     dockerManagement: no
#     mail: your_email
#     preventHomeAccess: yes
#     restrictUser: no
#     ssh_passphrase: 'your_pass_phrase'
#     sudoer: no

#   # Will be the dedicated user to manage docker containers, compose & services
#   - name: the_docker_guy_avwr8m2kq22nx22n5
#     allowCron: no
#     dockerManagement: yes
#     mail: your_email
#     preventHomeAccess: yes
#     restrictUser: no
#     ssh_passphrase: 'your_pass_phrase'
#     sudoer: no

#   # Will be the dedicated unprivileged user used as the main user inside containers
#   #     thanks to Linux/docker namespaces / https://docs.docker.com/engine/security/userns-remap/
#   # Different from the_docker_guy, as he won't even be in the 'docker' group
#   - name: the_docker_peon_9f6enk4s0654qs6d
#     allowCron: no
#     dockerManagement: no
#     mail: your_email
#     preventHomeAccess: no
#     restrictUser: yes
#     ssh_passphrase: 'your_pass_phrase'
#     sudoer: no


# ## Utils emails
# utils_emails__packagesToInstall: [
#   # Mail testing          / https://mailutils.org/
#   'mailutils',
#   # Send emails (MTA)     / http://www.postfix.org/
#   'postfix'
# ]

# Which will result in mail sent from utils_emails__hostname@utils_emails__domain_name, here likorne@YOUR_DOMAIN.fr
# utils_emails__hostname: likorne
# utils_emails__domain_name: YOUR_DOMAIN.fr


# ## Utils terminal
# utils_terminal__packagesToInstall: [
#   # CLI for data transfer / https://curl.haxx.se/                 / Required for Oh my ZSH
#   'curl',
#   # Terminal fonts        / https://github.com/powerline/fonts    / Required for Oh my ZSH
#   'fonts-powerline',
#   # Versionning           / https://git-scm.com/                  / Required for Oh my ZSH
#   'git',
#   # Shell++               / https://www.zsh.org/
#   'zsh'
# ]


# ## Utils text editor
# utils_text_editor__packagesToInstall: [
#   # Text editor           / https://www.vim.org/
#   'vim'
# ]


# ## Utils time
# utils_time__packagesToInstall: [
#   # Chrony                / https://help.ubuntu.com/lts/serverguide/NTP.html
#   'chrony',
#   # Old time sync         / https://fr.wikipedia.org/wiki/Network_Time_Protocol
#   # 'ntp',
#   # Time zone data        / https://launchpad.net/ubuntu/+source/tzdata
#   'tzdata',
# ]

# # If set, the hardware clock will be set to the current system time if the timezone is changed; valid values are utc or localtime. Defaults to null.
# #   https://askubuntu.com/questions/175452/hwclock-not-in-sync-with-system-clock
# utils_time__clock_hwclock_sync: 'localtime'

# # Find the most appropriate server / https://www.pool.ntp.org/zone/@
# utils_time__clock_ntpd_servers:
#   - 0.europe.pool.ntp.org
#   - 1.europe.pool.ntp.org
#   - 2.europe.pool.ntp.org
#   - 3.europe.pool.ntp.org

# utils_time__clock_ntpd_fallback_servers:
#   - 0.pool.ntp.org
#   - ntp.ubuntu.com
#   - 0.arch.pool.ntp.org

# # Timezone configuration
# # > timedatectl list-timezones
# utils_time__clock_timezone: 'Europe/Paris'
# utils_time__clock_tz_dir: '/usr/share/zoneinfo/'
...